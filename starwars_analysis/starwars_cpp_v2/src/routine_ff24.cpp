#include "cpu_0x6809.h"

namespace StarWars {

void routine_0xFF24_impl(StarWarsCPU& cpu) {
    // Converted from rom_disasm_auto_0xFF24.md
    // Address: 0x0xFF24

    // Converted from rom_disasm_auto_0xFF24.md
    // Address: 0xROUTINE_0xFF24
    // 0xFF24: LDA 0x00
    cpu.state_.a = 0x00;
    // 0xFF26: STA 0x0x4686
    cpu.cpu.write_memory(0x4686,  cpu.state_.a);
    // 0xFF29: STA 0x0x4683
    cpu.cpu.write_memory(0x4683,  cpu.state_.a);
    // 0xFF2C: STA 0x0x4682
    cpu.cpu.write_memory(0x4682,  cpu.state_.a);
    // 0xFF2F: LDX 0x0x0000
    cpu.state_.x = 0x0000;
    // 0xFF32: STA 0x0x4640
    cpu.cpu.write_memory(0x4640,  cpu.state_.a);
    // 0xFF35: LEAX 0x1,cpu.state_.x
    cpu.state_.x += 0x1,cpu.state_.x;
    // 0xFF37: CMPX 0x0x5600
    cpu.cpu.compare_x(0x5600);
    // 0xFF3A: BCS 0x0xFF32
    if (cpu.cpu.carry_flag()) cpu.state_.pc += 0xFF32;
    // 0xFF3C: LDA 0xFF
    cpu.state_.a = 0xFF;
    // 0xFF3E: STA 0x0x4686
    cpu.cpu.write_memory(0x4686,  cpu.state_.a);
    // 0xFF41: STA 0x0x4683
    cpu.cpu.write_memory(0x4683,  cpu.state_.a);
    // 0xFF44: STA 0x0x4682
    cpu.cpu.write_memory(0x4682,  cpu.state_.a);
    // 0xFF47: LDX 0x0x0000
    cpu.state_.x = 0x0000;
    // 0xFF4A: STA 0x0x4640
    cpu.cpu.write_memory(0x4640,  cpu.state_.a);
    // 0xFF4D: LEAX 0x1,cpu.state_.x
    cpu.state_.x += 0x1,cpu.state_.x;
    // 0xFF4F: CMPX 0x0x5600
    cpu.cpu.compare_x(0x5600);
    // 0xFF52: BCS 0x0xFF4A
    if (cpu.cpu.carry_flag()) cpu.state_.pc += 0xFF4A;
    // 0xFF54: JMP 0x0xFD07
    cpu.state_.pc = 0xFD07;
    // 0xFF57: LDA [0x0xC840]
    cpu.state_.a = [0x0xC840];
    // 0xFF5B: LDA <0x1F
    cpu.state_.a = 0x1F;
    // 0xFF5D: LSR -0x10,cpu.state_.x
    // TODO: Convert LSR -0x10,cpu.state_.x
    // 0xFF60: SUBA -0xC,cpu.state_.sp
    cpu.state_.a -= -0xC,cpu.state_.sp;
    // 0xFF62: LDA 0x0,cpu.state_.y
    cpu.state_.a = 0x0,cpu.state_.y;
    // 0xFF64: XDEC 0x0x6EE0
    // TODO: Convert XDEC 0x0x6EE0
    // 0xFF67: TST 0x0xE8AE
    // TODO: Convert TST 0x0xE8AE
    // 0xFF6B: ASL 0x0x9207
    // TODO: Convert ASL 0x0x9207
    // 0xFF6E: ANDB >0x0x0018
    cpu.state_.b &= 0x0x0018;
    // 0xFF71: 0xADCB 0x0,cpu.state_.u
    // TODO: Convert 0xADCB 0x0,cpu.state_.u
    // 0xFF73: ORA <0xF5
    cpu.state_.a |= 0xF5;
    // 0xFF75: SUBA 0x0x3807
    cpu.state_.a -= 0x3807;
    // 0xFF78: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF7B: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF7E: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF81: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF84: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF87: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF8A: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF8D: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF90: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF93: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF96: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF99: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF9C: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFF9F: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFA2: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFA5: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFA8: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFAB: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFAE: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFB1: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFB4: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFB7: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFBA: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFBD: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFC0: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFC3: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFC6: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFC9: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFCC: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFCF: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFD2: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFD5: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFD8: STU 0x0xFFFF
    cpu.cpu.write_memory(0xFFFF,  cpu.state_.u);
    // 0xFFDB: STU 0x0x434F
    cpu.cpu.write_memory(0x434F,  cpu.state_.u);
    // 0xFFE5: BRA 0x0x0018
    cpu.state_.pc += 0x0018;
}

} // namespace StarWars
